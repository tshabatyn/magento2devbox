##
# Services needed to run Magento2 application on Docker
#
# Docker Compose defines required services and attach them together through aliases
##
version: '2'
services:
  web:
    container_name: magento2devbox_web_9999
    restart: always
#    image: magento/magento2devbox_web:latest
    build: web
    volumes:
      - "./shared/webroot:/var/www/magento2"
      - "./shared/.composer:/home/magento2/.composer"
      - "./shared/.ssh:/home/magento2/.ssh"
      - "./shared/logs/apache2:/var/log/apache2"
      - "./shared/logs/php-fpm:/var/log/php-fpm"
      - "./shared/configs/varnish:/home/magento2/configs/varnish"
      - "./shared/.magento-cloud:/root/.magento-cloud"
    ports:
      - "52880:80"
      - "14631:22"
  db:
    container_name: magento2devbox_db_9999
    restart: always
    image: mysql:5.6
    ports:
      - "12958:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=magento2
    volumes:
      - "./shared/db:/var/lib/mysql"
      - "./shared/logs/mysql:/var/log/mysql"
  varnish:
    container_name: magento2devbox_varnish_9999
    restart: always
    depends_on:
      - "web"
#    image: magento/magento2devbox_varnish:latest
    build: varnish
    volumes:
      - "./shared/configs/varnish:/etc/varnish/default"
    ports:
      - "60780:6081"
  redis:
    container_name: magento2devbox_redis_9999
    restart: always
    image: redis:3.0.7
  rabbit:
    container_name: magento2devbox_rabbit_9999
    restart: always
    image: rabbitmq:3-management
    ports:
      - "25481:15672"
      - "64341:5672"
  elasticsearch:
    container_name: magento2devbox_elastic_9999
    restart: always
    image: elasticsearch:latest
    ports:
      - "4604:9200"

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
